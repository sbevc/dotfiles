# Ultisnips

# File must be symlinked from ultisnips folder

# See 
#	https://github.com/SirVer/ultisnips
#	https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt


# Define global python functions that will be available to use within snippets
# that use python scripts
global !p

def htmlize(camel_case_name):
	"""
	Convert camel case word to html-ish word. 

	For example: FooBarBaz will be converted to 'foo-bar-baz'
	"""
	htmlized = camel_case_name[0].lower()
	for l in camel_case_name[1:]:
		if l.isupper():
			htmlized += "-%s" % l.lower()
		else:
			htmlized += l
	return htmlized


def get_react_component_name():
	"""
	Get React's component name from the current filename
	
	Remember that snip is made available by ultisnips, see the docs.
	"""
	return snip.fn.split(".")[0]


def get_react_component_classname():
	"""Get component's html class name from the current component's name"""
	return htmlize(get_react_component_name())


endglobal
# End python fuctions


## React ##
snippet imr "Import react"
import React from 'react';
endsnippet

snippet imrd "Import react dom"
import ReactDOM from 'react-dom';
endsnippet

snippet rcc "React class component" b
import React from 'react';


class `!p snip.rv = get_react_component_name()` extends React.Component {

	render() {
		return (
			<div className="`!p snip.rv = get_react_component_classname()`">
				$0
			</div>
		);
	}

}


export default `!p snip.rv = get_react_component_name()`;
endsnippet


snippet rfc "React functional component" b
import React from 'react';


const `!p snip.rv = get_react_component_name()` = (${1:props}) => {

	return (
		<div className="`!p snip.rv = get_react_component_classname()`">
			$0
		</div>
	);

};


export default `!p snip.rv = get_react_component_name()`;
endsnippet
